# Product Service Configuration
nameOverride: "product-service"

# Deployment Configuration
deployment:
  enabled: true
  replicaCount: 1
  image:
    repository: product-service
    tag: latest
    pullPolicy: IfNotPresent
  service:
    port: 5001
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  livenessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /ready
      port: http
    initialDelaySeconds: 5
    periodSeconds: 5
  startupProbe:
    httpGet:
      path: /health
      port: http
    failureThreshold: 30
    periodSeconds: 10
  env:
    - name: PORT
      value: "5001"
    - name: NODE_ENV
      value: "test"
  envFrom:
    - configMapRef:
        name: product-service-config
    - secretRef:
        name: product-service-secrets

# Service Configuration
service:
  enabled: true
  type: ClusterIP
  port: 5001
  targetPort: 5001
  annotations: {}

# ServiceAccount Configuration
serviceAccount:
  create: true
  name: product-service-sa
  annotations: {}

# Autoscaling Configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Image Configuration
image:
  registry: 767397883134.dkr.ecr.eu-west-1.amazonaws.com
  name: microservices-product
  tag: 93247c4c92511f2da9eb3c7f85df1109434c5852
  pullPolicy: IfNotPresent

# Ingress Configuration
ingress:
  enabled: true
  name: "product-service-ingress"
  className: "alb"
  annotations:
    "scheme": "internet-facing"
    "targetType": "instance"
    "healthcheckPath": "/products/"
    "healthcheckProtocol": "HTTP"
    "successCodes": "200"
    "healthyThresholdCount": "2"
    "unhealthyThresholdCount": "2"
    "groupName": "platform-test-eks"
    "groupOrder": "1"
    "certificateArn": "arn:aws:acm:eu-west-1:767397883134:certificate/c8fdbfe8-a678-4055-8e4e-a48183f105af"
  hosts:
    - host: microservices.platform-online.shop
      paths:
        - path: /products
          pathType: Prefix
          service: product-service
          port: 80

# NetworkPolicy Configuration
networkPolicy:
  enabled: true
  name: "product-service-network-policy"
  ingressRules:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: user-service
      ports:
        - protocol: TCP
          port: 5001

# PodDisruptionBudget Configuration
podDisruptionBudget:
  enabled: true
  name: "product-service-pdb"
  minAvailable: 1

# ResourceQuota Configuration
resourceQuota:
  enabled: true
  name: "product-service-quota"
  hard:
    requests.cpu: "2"
    requests.memory: 2Gi
    limits.cpu: "4"
    limits.memory: 4Gi
    pods: "10"
